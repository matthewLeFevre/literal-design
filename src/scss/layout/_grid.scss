// the grid class and its variants can work as individual rows or if columns are configured
// in such a way one grid can represent multiple rows

.grid { @include grid;}
@each $size, $break in $break-points {
    .grid--#{$size} {
        @include bp($break) {
            @include grid; 
        }
    }
}
.grid--padded { @include grid("grid--padded");}
@each $size, $break in $break-points {
    .grid--padded--#{$size} {
        @include bp($break) {
            @include grid("grid--padded"); 
        }
    }
}
.grid--limited { @include grid("grid--limited");}
@each $size, $break in $break-points {
    .grid--limited--#{$size} {
        @include bp($break) {
            @include grid("grid--limited"); 
        }
    }
}
.grid--limited-padded { @include grid("grid--limited-padded");}
@each $size, $break in $break-points {
    .grid--limited-padded--#{$size} {
        @include bp($break) {
            @include grid("grid--limited-padded");
        }
    }
}

.grid--nested { @include grid("grid--nested");}

.col {
    $column: 1;
    @while $column <= $columns {
        &--#{$column} {
            grid-column: span $column;
        }
        $column: $column + 1;
    }
}

.col {
    @each $size, $bp in $break-points {
        &--#{$size} {
            @include bp($bp) {
                $column: 1;
                @while $column <= $columns {
                    &--#{$column} {
                        grid-column: span $column;
                    }
                    $column: $column + 1;
                }
            }
        }
    }
}

.grid__image {
    display: block;
    width: 100%;
}

.page__full-height {
    min-height: calc(100vh - 60px);
}

.page__full {
    min-height: 100vh;
}